# Generated by Django 5.1.6 on 2025-03-18 17:42

from django.db import migrations, models
from django.utils.text import slugify


def populate_slugs(apps, schema_editor):
    """
    Populate slug fields for existing Artist, Event, and Composition records.
    """
    # Get models from the migration state
    Artist = apps.get_model('events', 'Artist')
    Event = apps.get_model('events', 'Event')
    Composition = apps.get_model('events', 'Composition')
    
    # Populate Artist slugs
    for artist in Artist.objects.all():
        if not artist.slug:
            base_slug = slugify(artist.name)
            slug = base_slug
            count = 1
            # Ensure slug is unique
            while Artist.objects.filter(slug=slug).exists():
                slug = f"{base_slug}-{count}"
                count += 1
            artist.slug = slug
            artist.save(update_fields=['slug'])
    
    # Populate Event slugs
    for event in Event.objects.all():
        if not event.slug:
            base_slug = slugify(event.title)
            slug = base_slug
            count = 1
            # Ensure slug is unique
            while Event.objects.filter(slug=slug).exists():
                slug = f"{base_slug}-{count}"
                count += 1
            event.slug = slug
            event.save(update_fields=['slug'])
    
    # Populate Composition slugs
    for composition in Composition.objects.all():
        if not composition.slug:
            # Include artist name in slug for better uniqueness
            base_slug = f"{slugify(composition.title)}-{slugify(composition.artist.name)}"
            slug = base_slug
            count = 1
            # Ensure slug is unique
            while Composition.objects.filter(slug=slug).exists():
                slug = f"{base_slug}-{count}"
                count += 1
            composition.slug = slug
            composition.save(update_fields=['slug'])


class Migration(migrations.Migration):

    dependencies = [
        ('events', '0005_remove_event_map_link'),
    ]

    operations = [
        # First add slug fields without uniqueness constraint
        migrations.AddField(
            model_name='artist',
            name='slug',
            field=models.SlugField(blank=True, max_length=255, null=True, verbose_name='URL slug'),
        ),
        migrations.AddField(
            model_name='event',
            name='slug',
            field=models.SlugField(blank=True, max_length=255, null=True, verbose_name='URL slug'),
        ),
        migrations.AddField(
            model_name='composition',
            name='slug',
            field=models.SlugField(blank=True, max_length=255, null=True, verbose_name='URL slug'),
        ),
        
        # Then populate the slug fields
        migrations.RunPython(populate_slugs, migrations.RunPython.noop),
        
        # Finally, add uniqueness constraint and make them non-nullable
        migrations.AlterField(
            model_name='artist',
            name='slug',
            field=models.SlugField(blank=True, max_length=255, unique=True, verbose_name='URL slug'),
        ),
        migrations.AlterField(
            model_name='event',
            name='slug',
            field=models.SlugField(blank=True, max_length=255, unique=True, verbose_name='URL slug'),
        ),
        migrations.AlterField(
            model_name='composition',
            name='slug',
            field=models.SlugField(blank=True, max_length=255, unique=True, verbose_name='URL slug'),
        ),
    ]
