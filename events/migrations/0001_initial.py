# Generated by Django 5.1.3 on 2025-03-11 18:11

import django.db.models.deletion
import tinymce.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', tinymce.models.HTMLField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='artists/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Artist',
                'verbose_name_plural': 'Artists',
            },
        ),
        migrations.CreateModel(
            name='Composition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('type', models.CharField(choices=[('music', 'Music'), ('video', 'Video')], default='music', max_length=10)),
                ('file', models.FileField(blank=True, null=True, upload_to='compositions/')),
                ('cover_image', models.ImageField(blank=True, null=True, upload_to='composition_covers/')),
                ('link', models.URLField(blank=True, help_text='External link (e.g., YouTube, SoundCloud)', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='compositions', to='events.artist')),
            ],
            options={
                'verbose_name': 'Composition',
                'verbose_name_plural': 'Compositions',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', tinymce.models.HTMLField()),
                ('date', models.DateTimeField()),
                ('location', models.CharField(max_length=255)),
                ('image', models.ImageField(blank=True, null=True, upload_to='events/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('artists', models.ManyToManyField(blank=True, related_name='events', to='events.artist')),
            ],
            options={
                'verbose_name': 'Event',
                'verbose_name_plural': 'Events',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(blank=True, max_length=40, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('artist', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='events.artist')),
                ('composition', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='events.composition')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Like',
                'verbose_name_plural': 'Likes',
                'constraints': [models.UniqueConstraint(condition=models.Q(('artist__isnull', False)), fields=('user', 'artist'), name='unique_user_artist_like'), models.UniqueConstraint(condition=models.Q(('composition__isnull', False)), fields=('user', 'composition'), name='unique_user_composition_like'), models.UniqueConstraint(condition=models.Q(('artist__isnull', False)), fields=('session_key', 'artist'), name='unique_session_artist_like'), models.UniqueConstraint(condition=models.Q(('composition__isnull', False)), fields=('session_key', 'composition'), name='unique_session_composition_like')],
            },
        ),
    ]
